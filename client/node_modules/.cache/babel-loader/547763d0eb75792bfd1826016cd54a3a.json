{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\tiffa\\\\Code_BootCamp\\\\fantastic-happiness\\\\client\\\\src\\\\App.js\";\nimport \"./App.css\"; // import { setContext } from '@apollo/client/link/context';\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n// import {\n//   ApolloClient,\n//   InMemoryCache,\n//   ApolloProvider,\n//   createHttpLink,\n// } from \"@apollo/client\";\n\nimport Landing from \"./pages/landing\"; // import Login from \"./pages/services\";\n// import NavBar from \"./components/NavBar\";\n\nimport Profile from \"./pages/profile\"; // import DevProfile from \"./devProfile\";\n// import Checkout from \"./pages/checkout\";\n\nimport { ChakraProvider } from \"@chakra-ui/react\"; // const httpLink = createHttpLink({\n//   uri: \"/graphql\",\n// });\n// const authLink = setContext((_, { headers }) => {\n//   const token = localStorage.getItem('id_token');\n//   return {\n//     headers: {\n//       ...headers,\n//       authorization: token ? `Bearer ${token}` : '',\n//     },\n//   };\n// });\n// const client = new ApolloClient({\n//   link: authLink.concat(httpLink),\n//   cache: new InMemoryCache(),\n// });\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  return (\n    /*#__PURE__*/\n    //Wrap application in chakra provider at root(TIffany)\n    // <ApolloProvider client={client}>\n    //   <Router>\n    //     <div>\n    //       <ChakraProvider>\n    //         <NavBar />\n    //         <Routes>\n    //           <Route path=\"/\" element={<Landing />} />\n    //           <Route path=\"/login\" element={<login />} />\n    //           <Route path=\"/profile\" element={<profile />} />\n    //         </Routes>\n    //       </ChakraProvider>\n    //     </div>\n    //   </Router>\n    // </ApolloProvider>\n    _jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ChakraProvider, {\n        children: /*#__PURE__*/_jsxDEV(Profile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)\n  );\n}\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["Landing","Profile","ChakraProvider","App"],"sources":["C:/Users/tiffa/Code_BootCamp/fantastic-happiness/client/src/App.js"],"sourcesContent":["import \"./App.css\";\n// import { setContext } from '@apollo/client/link/context';\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\n// import {\n//   ApolloClient,\n//   InMemoryCache,\n//   ApolloProvider,\n//   createHttpLink,\n// } from \"@apollo/client\";\n\nimport Landing from \"./pages/landing\";\n// import Login from \"./pages/services\";\n// import NavBar from \"./components/NavBar\";\nimport Profile from \"./pages/profile\";\n// import DevProfile from \"./devProfile\";\n// import Checkout from \"./pages/checkout\";\n\nimport { ChakraProvider } from \"@chakra-ui/react\";\n\n// const httpLink = createHttpLink({\n//   uri: \"/graphql\",\n// });\n\n// const authLink = setContext((_, { headers }) => {\n//   const token = localStorage.getItem('id_token');\n//   return {\n//     headers: {\n//       ...headers,\n//       authorization: token ? `Bearer ${token}` : '',\n//     },\n//   };\n// });\n\n\n// const client = new ApolloClient({\n//   link: authLink.concat(httpLink),\n//   cache: new InMemoryCache(),\n// });\n\nfunction App() {\n  return (\n    //Wrap application in chakra provider at root(TIffany)\n    // <ApolloProvider client={client}>\n    //   <Router>\n    //     <div>\n    //       <ChakraProvider>\n    //         <NavBar />\n    //         <Routes>\n    //           <Route path=\"/\" element={<Landing />} />\n    //           <Route path=\"/login\" element={<login />} />\n    //           <Route path=\"/profile\" element={<profile />} />\n    //         </Routes>\n    //       </ChakraProvider>\n    //     </div>\n    //   </Router>\n    // </ApolloProvider>\n\n    <div>\n      <ChakraProvider>\n        <Profile />\n      </ChakraProvider>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA,OAAO,WAAP,C,CACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAOA,OAAP,MAAoB,iBAApB,C,CACA;AACA;;AACA,OAAOC,OAAP,MAAoB,iBAApB,C,CACA;AACA;;AAEA,SAASC,cAAT,QAA+B,kBAA/B,C,CAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;;;;AAEA,SAASC,GAAT,GAAe;EACb;IAAA;IACE;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAEA;MAAA,uBACE,QAAC,cAAD;QAAA,uBACE,QAAC,OAAD;UAAA;UAAA;UAAA;QAAA;MADF;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA;EAjBF;AAuBD;;KAxBQA,G;AA0BT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}